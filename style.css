/* style.css */
body {
    font-family: sans-serif;
    padding: 20px;
    background-color: #f4f4f4;
    display: flex;
    flex-direction: column;
    min-height: 100vh; /* Ensure body takes full viewport height */
    margin: 0;
}

h1, h3 {
    color: #333;
}

.request-container {
    background-color: #fff;
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 20px;
    border-radius: 5px;
}

/* Flex grow allows response container to take remaining space */
.response-container {
    background-color: #fff;
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 20px;
    border-radius: 5px;
    display: flex;
    flex-direction: column; /* Content inside response-container stacks vertically */
    flex-grow: 1; /* Allow it to grow and fill available space */
}


select, input[type="text"], textarea, button {
    padding: 8px;
    margin-right: 10px;
    border: 1px solid #ccc;
    border-radius: 3px;
    font-size: 14px;
    vertical-align: middle;
}

input[type="text"]#url-input {
    width: 60%;
}

textarea {
    width: 95%;
    font-family: 'Courier New', Courier, monospace;
}

button {
    background-color: #007bff;
    color: white;
    cursor: pointer;
    border: none;
}

button:hover {
    background-color: #0056b3;
}

/* Response display styling - now applies to ALL pre elements in tab-content */
.tab-content pre { /* Target pre elements specifically within tab-content */
    background-color: #eee;
    padding: 10px;
    border-radius: 3px;
    overflow-x: auto;
    white-space: pre-wrap;
    word-wrap: break-word;
    flex-grow: 1; /* Allows pre to take available height */
    min-height: 50px; /* Minimum height even if no content */
    max-height: 300px; /* Set a max height */
    overflow-y: auto; /* Add vertical scrollbar if content overflows */
}

/* New: Styles for the response header and status */
.response-header {
    display: flex;
    justify-content: space-between; /* Puts Response H3 on left, Status P on right */
    align-items: center; /* Vertically aligns them */
    margin-bottom: 10px;
}

#status-display {
    font-weight: bold;
    color: #333; /* Base color, will be overridden by status-specific classes */
    margin: 0; /* Remove default paragraph margin */
}

/* Status Colors (retained) */
.status-success {
    color: #28a745; /* Green */
}

.status-redirect {
    color: #ffc107; /* Yellow/Orange */
}

.status-client-error {
    color: #dc3545; /* Red */
}

.status-server-error {
    color: #6c757d; /* Gray for server errors (can be red too) */
}

.status-info {
    color: #17a2b8; /* Blue-ish for informational (1xx) or generic */
}

/* Styles for dynamic key-value pairs (retained) */
.key-value-list {
    margin-bottom: 10px;
}

.key-value-row {
    display: flex;
    align-items: center;
    margin-bottom: 8px;
}

.key-value-row input[type="text"] {
    flex: 1;
    margin-right: 5px;
}

.key-value-row .key-input {
    min-width: 120px;
}

.key-value-row .value-input {
    min-width: 200px;
}

.key-value-row .remove-row-btn {
    background-color: #dc3545;
    margin-right: 0;
    padding: 6px 10px;
    font-size: 12px;
}

.key-value-row .remove-row-btn:hover {
    background-color: #c82333;
}

/* --- Specific fix for Add Param/Header buttons --- */
/* Target buttons that are direct children of the tab-content. */
/* We want them to only take up their natural width. */
#add-query-param-btn,
#add-header-btn {
    width: auto;         /* Allow content to define width */
    flex-grow: 0;        /* Prevent stretching */
    align-self: flex-start; /* Crucial: Align to start of cross-axis (left) to prevent stretching */
    margin-left: 0;      /* Ensure no extra left margin */
    margin-right: 10px;  /* Keep standard right margin */
}

/* Ensure the "remove" buttons within key-value-row are not affected */
.key-value-row .remove-row-btn {
    width: auto;
    flex-grow: 0;
    margin-right: 0;
}

/* Tab Styles (retained for general tab-container behavior) */
.tab-container {
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 5px;
    margin-bottom: 20px;
    overflow: hidden;
}

/* Specific styling for the response tab container to remove its own border, as it's inside another box */
.response-tabs-container {
    border: none; /* Remove border from inner tab container */
    margin-bottom: 0; /* Remove bottom margin if desired */
    border-radius: 0; /* No radius for inner tabs */
    flex-grow: 1; /* Allow inner tab container to grow if needed */
    display: flex;
    flex-direction: column;
}

.tab-buttons {
    display: flex;
    border-bottom: 1px solid #ddd;
}

/* Adjust top margin for response tabs to visually separate from response-header */
.response-tabs {
    margin-top: 10px;
}


.tab-button {
    background-color: #e9ecef;
    color: #495057;
    padding: 10px 15px;
    cursor: pointer;
    border: none;
    border-radius: 0;
    margin-right: 1px;
    flex-grow: 1;
    text-align: center;
    transition: background-color 0.3s ease;
}

.tab-button:hover {
    background-color: #dee2e6;
}

.tab-button.active {
    background-color: #fff;
    color: #007bff;
    border-bottom: 3px solid #007bff;
    font-weight: bold;
}

.tab-content-wrapper {
    padding: 15px;
}

/* For response content wrapper, we want it to take full height */
.response-content-wrapper {
    flex-grow: 1;
    display: flex; /* To allow tab-content inside it to flex */
    flex-direction: column;
    padding-top: 0; /* Reduce padding if needed */
}

.tab-content {
    display: none;
    flex-grow: 1; /* Allow content to grow within wrapper */
    overflow: hidden; /* Ensure content doesn't overflow tab */
    padding-top: 15px; /* Add padding to content area */
}

.tab-content.active {
    display: flex; /* Changed to flex to make pre inside it grow */
    flex-direction: column;
}

/* Specific adjustment for request body textarea */
#body .tab-content textarea {
    min-height: 150px; /* Ensure body textarea has a good height */
}